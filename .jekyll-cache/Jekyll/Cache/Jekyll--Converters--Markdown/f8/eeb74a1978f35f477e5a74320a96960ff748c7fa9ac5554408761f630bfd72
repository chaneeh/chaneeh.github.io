I"+!<h1 class="no_toc" id="code">Code</h1>

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#inline-code" id="markdown-toc-inline-code">Inline code</a></li>
  <li><a href="#syntax-highlighted-code-blocks" id="markdown-toc-syntax-highlighted-code-blocks">Syntax highlighted code blocks</a></li>
  <li><a href="#code-blocks-with-rendered-examples" id="markdown-toc-code-blocks-with-rendered-examples">Code blocks with rendered examples</a></li>
  <li><a href="#mermaid-diagram-code-blocks" id="markdown-toc-mermaid-diagram-code-blocks">Mermaid diagram code blocks</a></li>
</ol>

<hr />

<h2 id="inline-code">Inline code</h2>

<p>Code can be rendered inline by wrapping it in single back ticks.</p>

<div class="code-example">
  <p>Lorem ipsum dolor sit amet, <code class="language-plaintext highlighter-rouge">&lt;inline code snippet&gt;</code> adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>

  <h2 class="no_toc" id="heading-with-inline-code-snippet-in-it">Heading with <code class="language-plaintext highlighter-rouge">&lt;inline code snippet&gt;</code> in it.</h2>
</div>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Lorem ipsum dolor sit amet, <span class="sb">`&lt;inline code snippet&gt;`</span> adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

<span class="gu">## Heading with `&lt;inline code snippet&gt;` in it.</span>
</code></pre></div></div>

<hr />

<h2 id="syntax-highlighted-code-blocks">Syntax highlighted code blocks</h2>

<p>Use Jekyll’s built-in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name:</p>

<div class="code-example">
  <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>  </div>
</div>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">```</span><span class="nl">js
</span><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">```</span></code></pre></figure>

<hr />

<h2 id="code-blocks-with-rendered-examples">Code blocks with rendered examples</h2>

<p>To demonstrate front end code, sometimes it’s useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a <code class="language-plaintext highlighter-rouge">&lt;div&gt;</code> with the <code class="language-plaintext highlighter-rouge">code-example</code> class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the <code class="language-plaintext highlighter-rouge">markdown="1"</code> attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta…</p>

<div class="code-example">

  <div class="code-example">

    <p><a href="http://example.com/" class="btn">Link button</a></p>

  </div>
  <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nv">Link button</span><span class="p">](</span><span class="sx">http://example.com/</span><span class="p">)</span>{: .btn }
</code></pre></div>  </div>

</div>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"code-example"</span> <span class="na">markdown=</span><span class="s">"1"</span><span class="nt">&gt;</span>

<span class="p">[</span><span class="nv">Link button</span><span class="p">](</span><span class="sx">http://example.com/</span><span class="p">)</span>{: .btn }

<span class="nt">&lt;/div&gt;</span>
<span class="p">```</span><span class="nl">markdown
</span><span class="p">[</span><span class="nv">Link button</span><span class="p">](</span><span class="sx">http://example.com/</span><span class="p">)</span>{: .btn }
<span class="p">```</span></code></pre></figure>

<hr />

<h2 id="mermaid-diagram-code-blocks">Mermaid diagram code blocks</h2>

<p><a href="https://mermaid-js.github.io/mermaid/">Mermaid</a> allows you to add diagrams and visualizations using Markdown code blocks. <strong>It is disabled by default</strong>. However, you can turn on support for mermaid by adding a <code class="language-plaintext highlighter-rouge">mermaid</code> key to your <code class="language-plaintext highlighter-rouge">_config.yml</code>.</p>

<p>The minimum configuration requires a <code class="language-plaintext highlighter-rouge">version</code> key (matching a version in <a href="https://cdn.jsdelivr.net/npm/mermaid/">jsDelivr</a>):</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">mermaid</span><span class="pi">:</span>
  <span class="c1"># Version of mermaid library</span>
  <span class="c1"># Pick an available version from https://cdn.jsdelivr.net/npm/mermaid/</span>
  <span class="na">version</span><span class="pi">:</span> <span class="s2">"</span><span class="s">9.1.3"</span>
</code></pre></div></div>

<p>Additional configuration options are loaded through <code class="language-plaintext highlighter-rouge">_includes/mermaid_config.js</code>. By default, the contents of the file are the empty object:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// _includes/mermaid_config.js</span>
<span class="p">{}</span>
</code></pre></div></div>

<p>This loads the default settings.</p>

<p>The contents of this object should follow <a href="https://mermaid-js.github.io/mermaid/#/./Setup?id=configuration">mermaid’s configuration API</a>. For example, to override the theme, change <code class="language-plaintext highlighter-rouge">_includes/mermaid_config.js</code> to:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// _includes/mermaid_config.js</span>
<span class="p">{</span>
  <span class="nl">theme</span><span class="p">:</span> <span class="dl">"</span><span class="s2">forest</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Once mermaid is installed, it can be used in markdown files. The markdown for a simple flowchart example might look like the following:</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">```</span><span class="nl">mermaid
</span><span class="sb">graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;</span>
<span class="p">```</span></code></pre></figure>

<p>which renders:</p>

<pre><code class="language-mermaid">graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;
</code></pre>

<p><em>Note: for demonstration purposes, we’ve enabled mermaid on this site. It is still disabled by default, and users need to opt-in to use it.</em></p>
:ET