I"4D<p><button class="btn js-toggle-dark-mode">Preview dark color scheme</button></p>

<script>
const toggleDarkMode = document.querySelector('.js-toggle-dark-mode');

jtd.addEvent(toggleDarkMode, 'click', function(){
  if (jtd.getTheme() === 'dark') {
    jtd.setTheme('light');
    toggleDarkMode.textContent = 'Preview dark color scheme';
  } else {
    jtd.setTheme('dark');
    toggleDarkMode.textContent = 'Return to the light side';
  }
});
</script>

<p>Text can be <strong>bold</strong>, <em>italic</em>, or <del>strikethrough</del>.</p>

<p><a href="another-page">Link to another page</a>.</p>

<p>There should be whitespace between paragraphs.</p>

<p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p>

<h1 id="header-1"><a href="#header-1"></a>Header 1</h1>

<p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p>

<h2 id="header-2"><a href="#header-2"></a>Header 2</h2>

<blockquote>
  <p>This is a blockquote following a header.</p>

  <p>When something is important enough, you do it even if the odds are not in your favor.</p>
</blockquote>

<h3 id="header-3"><a href="#header-3"></a>Header 3</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Ruby code with syntax highlighting</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="header-4-with-code-not-transformed"><a href="#header-4"></a>Header 4 <code class="language-plaintext highlighter-rouge">with code not transformed</code></h4>

<ul>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
</ul>

<h5 id="header-5"><a href="#header-5"></a>Header 5</h5>

<ol>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
</ol>

<h6 id="header-6"><a href="#header-6"></a>Header 6</h6>

<p><a href=".">This is a very long link which wraps and therefore doesn’t overflow
even when it comes at the beginning</a> of the line.</p>

<ul>
  <li><a href=".">This is a very long link which wraps and therefore doesn’t overflow the line
when used first in an item </a> in a list.</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left">head1</th>
      <th style="text-align: left">head two</th>
      <th style="text-align: left">three</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good swedish fish</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">out of stock</td>
      <td style="text-align: left">good and plenty</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">oreos</code></td>
      <td style="text-align: left">hmm</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">zoute</code> drop</td>
      <td style="text-align: left">yumm</td>
    </tr>
  </tbody>
</table>

<h3 id="theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</h3>

<hr />

<h3 id="here-is-an-unordered-list">Here is an unordered list:</h3>

<ul>
  <li>Item foo</li>
  <li>Item bar</li>
  <li>Item baz</li>
  <li>Item zip</li>
</ul>

<h3 id="and-an-ordered-list">And an ordered list:</h3>

<ol>
  <li>Item one</li>
  <li>Item two</li>
  <li>Item three</li>
  <li>Item four</li>
</ol>

<h3 id="and-an-ordered-list-continued">And an ordered list, continued:</h3>

<ol>
  <li>Item one</li>
  <li>Item two</li>
</ol>

<p>Some text</p>

<ol style="counter-reset:none">
  <li>Item three</li>
  <li>Item four</li>
</ol>

<h3 id="and-an-ordered-list-starting-from-42">And an ordered list starting from 42:</h3>

<ol style="counter-reset:step-counter 41">
  <li>Item 42</li>
  <li>Item 43</li>
  <li>Item 44</li>
</ol>

<h3 id="and-a-nested-list">And a nested list:</h3>

<ul>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item
        <ul>
          <li>level 3 item</li>
          <li>level 3 item</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item</li>
</ul>

<h3 id="nesting-an-ol-in-ul-in-an-ol">Nesting an ol in ul in an ol</h3>

<ul>
  <li>level 1 item (ul)
    <ol>
      <li>level 2 item (ol)</li>
      <li>level 2 item (ol)
        <ul>
          <li>level 3 item (ul)</li>
          <li>level 3 item (ul)</li>
        </ul>
      </li>
    </ol>
  </li>
  <li>level 1 item (ul)
    <ol>
      <li>level 2 item (ol)</li>
      <li>level 2 item (ol)
        <ul>
          <li>level 3 item (ul)</li>
          <li>level 3 item (ul)</li>
        </ul>
      </li>
      <li>level 4 item (ol)</li>
      <li>level 4 item (ol)
        <ul>
          <li>level 3 item (ul)</li>
          <li>level 3 item (ul)</li>
        </ul>
      </li>
    </ol>
  </li>
  <li>level 1 item (ul)</li>
</ul>

<h3 id="and-a-task-list">And a task list</h3>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Hello, this is a TODO item</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Hello, this is another TODO item</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Goodbye, this item is done</li>
</ul>

<h3 id="nesting-task-lists">Nesting task lists</h3>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)
    <ul class="task-list">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 2 item (task)</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 2 item (task)</li>
    </ul>
  </li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)</li>
</ul>

<h3 id="nesting-a-ul-in-a-task-list">Nesting a ul in a task list</h3>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)
    <ul>
      <li>level 2 item (ul)</li>
      <li>level 2 item (ul)</li>
    </ul>
  </li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 1 item (task)</li>
</ul>

<h3 id="nesting-a-task-list-in-a-ul">Nesting a task list in a ul</h3>

<ul>
  <li>level 1 item (ul)
    <ul class="task-list">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 2 item (task)</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />level 2 item (task)</li>
    </ul>
  </li>
  <li>level 1 item (ul)</li>
  <li>level 1 item (ul)</li>
</ul>

<h3 id="small-image">Small image</h3>

<p><img src="../../assets/images/small-image.jpg" alt="" /></p>

<h3 id="large-image">Large image</h3>

<p><img src="../../assets/images/large-image.jpg" alt="" /></p>

<p>“<a href="https://www.flickr.com/photos/97810305@N08/9401451269">Wroclaw University Library digitizing rare archival texts</a>” by <a href="https://www.flickr.com/photos/97810305@N08">j_cadmus</a> is marked with <a href="https://creativecommons.org/licenses/by/2.0/?ref=openverse">CC BY 2.0</a>.</p>

<h3 id="labels">Labels</h3>

<p class="label">I’m a label</p>

<p class="label label-blue">blue</p>
<p class="label label-green">green</p>
<p class="label label-purple">purple</p>
<p class="label label-yellow">yellow</p>
<p class="label label-red">red</p>

<p class="label"><strong>bold</strong></p>
<p class="label"><em>italic</em></p>
<p class="label"><strong><em>bold + italic</em></strong></p>

<h3 id="definition-lists-can-be-used-with-html-syntax">Definition lists can be used with HTML syntax.</h3>

<dl>
<dt>Name</dt>
<dd>Godzilla</dd>
<dt>Born</dt>
<dd>1952</dd>
<dt>Birthplace</dt>
<dd>Japan</dd>
<dt>Color</dt>
<dd>Green</dd>
</dl>

<h4 id="multiple-description-terms-and-values">Multiple description terms and values</h4>

<dl>
  <dt>Term</dt>
  <dd>Brief description of Term</dd>
  <dt>Longer Term</dt>
  <dd>Longer description of Term,
possibly more than one line</dd>
  <dt>Term</dt>
  <dd>First description of Term,
possibly more than one line</dd>
  <dd>
    <p>Second description of Term,
possibly more than one line</p>
  </dd>
  <dt>Term1</dt>
  <dt>Term2</dt>
  <dd>Single description of Term1 and Term2,
possibly more than one line</dd>
  <dt>Term1</dt>
  <dt>Term2</dt>
  <dd>First description of Term1 and Term2,
possibly more than one line</dd>
  <dd>
    <p>Second description of Term1 and Term2,
possibly more than one line</p>
  </dd>
</dl>

<h3 id="more-code">More code</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">dump_args</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
    <span class="s">"This decorator dumps out the arguments passed to a function before calling it"</span>
    <span class="n">argnames</span> <span class="o">=</span> <span class="n">func</span><span class="p">.</span><span class="n">func_code</span><span class="p">.</span><span class="n">co_varnames</span><span class="p">[:</span><span class="n">func</span><span class="p">.</span><span class="n">func_code</span><span class="p">.</span><span class="n">co_argcount</span><span class="p">]</span>
    <span class="n">fname</span> <span class="o">=</span> <span class="n">func</span><span class="p">.</span><span class="n">func_name</span>
    <span class="k">def</span> <span class="nf">echo_func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="k">print</span> <span class="n">fname</span><span class="p">,</span> <span class="s">":"</span><span class="p">,</span> <span class="s">', '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
            <span class="s">'%s=%r'</span> <span class="o">%</span> <span class="n">entry</span>
            <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">argnames</span><span class="p">,</span><span class="n">args</span><span class="p">)</span> <span class="o">+</span> <span class="n">kwargs</span><span class="p">.</span><span class="n">items</span><span class="p">())</span>
        <span class="k">return</span> <span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">echo_func</span>

<span class="o">@</span><span class="n">dump_args</span>
<span class="k">def</span> <span class="nf">f1</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span>

<span class="n">f1</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">precondition</span><span class="p">(</span><span class="n">precondition</span><span class="p">,</span> <span class="n">use_conditions</span><span class="o">=</span><span class="n">DEFAULT_ON</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">conditions</span><span class="p">(</span><span class="n">precondition</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">use_conditions</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">postcondition</span><span class="p">(</span><span class="n">postcondition</span><span class="p">,</span> <span class="n">use_conditions</span><span class="o">=</span><span class="n">DEFAULT_ON</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">conditions</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="n">postcondition</span><span class="p">,</span> <span class="n">use_conditions</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">conditions</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="n">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s">'__precondition'</span><span class="p">,</span> <span class="s">'__postcondition'</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pre</span><span class="p">,</span> <span class="n">post</span><span class="p">,</span> <span class="n">use_conditions</span><span class="o">=</span><span class="n">DEFAULT_ON</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">use_conditions</span><span class="p">:</span>
            <span class="n">pre</span><span class="p">,</span> <span class="n">post</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">__precondition</span>  <span class="o">=</span> <span class="n">pre</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">__postcondition</span> <span class="o">=</span> <span class="n">post</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
</code></pre></div></div>

<h3 id="mermaid-diagrams">Mermaid Diagrams</h3>

<p>The following code is displayed as a diagram only when a <code class="language-plaintext highlighter-rouge">mermaid</code> key supplied in <code class="language-plaintext highlighter-rouge">_config.yml</code>.</p>

<pre><code class="language-mermaid">graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;
</code></pre>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The final element.
</code></pre></div></div>
:ET